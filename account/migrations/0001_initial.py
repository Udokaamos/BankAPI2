# Generated by Django 3.2.12 on 2022-07-20 12:20

import account.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone', models.FloatField(max_length=11, unique=True, verbose_name='phone number')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('account_num', models.PositiveIntegerField(blank=True, default=0, unique=True, verbose_name='account num')),
                ('account_type', models.CharField(blank=True, max_length=355)),
                ('bank_name', models.CharField(blank=True, choices=[('FirstBank', 'FirstBank'), ('AccessBank', 'AccessBank'), ('ZenithBank', 'ZenithBank'), ('SterlingBank', 'SterkingBank'), ('StanbicIBTCBank', 'StanbicIBTC'), ('GTBank', 'GTBank')], max_length=200, verbose_name='bank name')),
                ('account_balance', models.FloatField(blank=True, max_length=50, null=True, verbose_name='account balance')),
                ('branch', models.CharField(blank=True, max_length=100, verbose_name='branch name')),
                ('branch_address', models.CharField(max_length=250, verbose_name='branch address')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('is_admin', models.BooleanField(default=False, verbose_name='admin')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser')),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', account.managers.UserManager()),
            ],
        ),
    ]
